worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

events {
    worker_connections 1024;
}


http {
    # Use Docker's internal DNS resolver
    resolver 127.0.0.11 valid=30s; 

    include       mime.types;
    default_type  application/octet-stream;

    error_log /logs/error.log debug;

    
    include generic_conf/setup_cache.conf;

    proxy_temp_path     /var/run/openresty/nginx-proxy;
    fastcgi_temp_path   /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path     /var/run/openresty/nginx-uwsgi;
    scgi_temp_path      /var/run/openresty/nginx-scgi;

    sendfile    on;

    keepalive_timeout   65;

    init_worker_by_lua_block {
        local redis_subscribe = require "/usr/local/openresty/nginx/conf/lua/redis-subscribe";
        redis_subscribe.start()
    }

    upstream origin {
      server origin:3000;
    }

    server {
        listen 80;

        location /api/file/upload {
            proxy_pass http://origin;
        }

        location ~ ^/api/file/download/([^/]+\.[a-zA-Z0-9]+)$ {
            include generic_conf/define_cache.conf;
            proxy_pass http://origin;
            add_header X-Edge Server;
        }

        location / {
            return 404;
        }


        # location ~ ^/api(/|$) {
        #     include generic_conf/define_cache.conf;
        #     proxy_pass http://origin;
        #     add_header X-Edge Server;
        # }
    }


    # include generic_conf/vts_setup.conf;
    # js_path "njs/";
    # js_import example from example.js;
}