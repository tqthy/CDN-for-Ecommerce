version: '3.8'



services:
  edge_server_1:
    build: ./edge-server
    container_name: edge1
    expose:
      - "80"
    volumes:
      - ./edge-server/nginx-edge.conf:/etc/nginx/nginx.conf  # Mount nginx configuration
      - ./edge-server/generic_conf:/etc/nginx/generic_conf   # Mount generic config folder
    environment:
      - REDIS_HOST=redis_channel
      - REDIS_PORT=6379
      - REDIS_CHANNEL=cache-updates
    networks:
      - my_network
    depends_on:
      - origin
  
  edge_server_2:
    build: ./edge-server
    container_name: edge2
    expose:
      - "80"
    volumes:
      - ./edge-server/nginx-edge.conf:/etc/nginx/nginx.conf  # Mount nginx configuration
      - ./edge-server/generic_conf:/etc/nginx/generic_conf   # Mount generic config folder
    environment:
      - REDIS_HOST=redis_channel
      - REDIS_PORT=6379
      - REDIS_CHANNEL=cache-updates
    networks:
      - my_network
    depends_on:
      - origin
  
  load_balancer_1:
    build: ./load-balancer
    container_name: lb1
    ports:
      - "80:80"
    volumes:
      - ./load-balancer/nginx-loadbalancer.conf:/etc/nginx/nginx.conf  # Mount nginx configuration
      - ./load-balancer/generic_conf:/etc/nginx/generic_conf   # Mount generic config folder
    cap_add:
      - NET_ADMIN
    networks:
      - my_network
    depends_on:
      - edge_server_1
      - edge_server_2
  redis_channel:
    image: redis:alpine
    container_name: redis_channel
    ports:
      - "6379:6379"
    networks:
      - my_network
  origin:
    build: ./origin 
    container_name: origin
    environment:
      - REDIS_HOST=redis_channel
      - REDIS_PORT=6379
      - REDIS_CHANNEL=cache-updates
    expose:
      - "3000"
    networks:
      - my_network
    depends_on:
      - storage
      - redis_channel

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - my_network
    
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning/datasources
    networks:
      - my_network

  storage:
    image: minio/minio
    container_name: storage
    hostname: storage
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_OPTS: --console-address :9001
      MINIO_VOLUMES: /mnt/data
      MINIO_NOTIFY_WEBHOOK_ENABLE_PRIMARY: "on"
      MINIO_NOTIFY_WEBHOOK_ENDPOINT_PRIMARY: "http://origin:3000/api/minio/notify"
      TZ: Asia/Bangkok
    volumes:
      - ./storage/data:/mnt/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    command: server --console-address ":9001" /data
    networks:
      - my_network
networks:
  my_network:
    driver: bridge

